AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  challenge

  Sample SAM Template for challenge

Globals:
  Function:
    Timeout: 3
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  SyncChallengeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: app.syncChallengeLambdaHandler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      Events:
        SyncChallenge:
          Type: Api
          Properties:
            Path: /createUser
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2022
        Sourcemap: true
        EntryPoints:
        - app.ts

  AsyncChallengeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: async-challenge-queue

  AsyncChallengeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: app.asyncChallengeLambdaHandler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      Policies:
      - Statement:
        - Sid: EventBridgePutEvents
          Effect: "Allow"
          Action:
            - "events:PutEvents"
          Resource: "*"
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt AsyncChallengeQueue.Arn
            BatchSize: 1
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2022
        Sourcemap: true
        EntryPoints:
        - app.ts

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
